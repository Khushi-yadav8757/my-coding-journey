class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
      for (int i=0 ; i<nums.size() ; i++)
    {
        for(int j=i+1; j<nums.size() ; j++)
        { if (nums[i]==nums[j]){
           return true;
        }
    }

    }
    return 0;
    }
    };
time complexity is (Onlogn)

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        int n=nums.size();
        sort(nums.begin(),nums.end());

        for (int i=0 ;i<n-1; i++)
    {
    
        if (nums[i]==nums[i+1]){
          return true;
        
    }

    }
    return false;
    }
    };



Leetcode 1 
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        for(int i=0;i<nums.size();i++){
            for( int j=i+1;j<nums.size();j++){
            if(nums[i]+nums[j]==target){
                return {i,j};
            }
        }
    }
    return {};
}
};
time complexity of this code is On
